const Utils = require('../../utils/index');
const describe = require('mocha').describe;
const it = require('mocha').it;

let sut;
let fake_profile = Utils.closure();

describe('users', () => {
    beforeEach(() => {
        sut = require('../../index');
        return createProfile()
            .then(createUser)
            .catch(reason => console.error('all the reason', reason));
    });

    describe('.create', () => {
        it('should succeed when all information are correct', (done) => {
            sut.actions.users
                .create({
                    data: {
                        email: 'dev@digipolitan.com',
                        password: 'password',
                        company: 'Digipolitan',
                        profile: fake_profile.value()
                    }
                })
                .should.be.fulfilled.and.notify(done)
        });

        it('should fail when email is already taken', (done) => {
            sut.actions.users
                .create({
                    data: {
                        email: 'user@digipolitan.com',
                        password: 'password'
                    }
                })
                .should.be.rejectedWith(Error, 'email.already.exists')
                .and.eventually.have.property('code', 409)
                .and.notify(done)
        });

        it('should fail when profile does not exist', (done) => {
            sut.actions.users
                .create({
                    data: {
                        email: 'new@digipolitan.com',
                        password: 'password',
                        profile: '1153ce433dc1684e3105adad',
                        company: 'Digipolitan'
                    }
                })
                .should.be.rejectedWith(Error, 'unprocessable.profile')
                .and.eventually.have.property('code', 422)
                .and.notify(done)
        });
    });

    afterEach(() => {
        return clearUser()
            .then(clearProfile);
    })
});


function createUser() {
    return sut.actions.users
        .create({
            data: {
                email: 'user@digipolitan.com',
                password: 'password',
                company: 'Digipolitan',
                profile: fake_profile.value()
            }
        })
}

function createProfile() {
    return sut.models.Profile.create({
        title: 'fake'
    })
        .then(fake_profile.assign)
}

function clearUser() {
    return sut.models.User.remove();
}

function clearProfile() {
    return sut.models.Profile.remove();
}