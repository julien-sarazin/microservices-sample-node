module.exports = app => {
    const router = app.Router();

    /**
     * @api {get} /castings    Request list of castings
     * @apiName List
     * @apiGroup Castings
     * @apiVersion 1.0.0
     * @apiUse MissingTokenError
     * @apiUse InvalidSchemeError
     * @apiUse InvalidTokenError
     * @apiUse TokenExpiredError
     */
    router
        .get('/',
            app.middlewares.ensureAuthenticated,
            app.actions.castings.list.expose()
        )

        /**
         * @api {get} /castings/:id    Request detailed information about a specific user
         * @apiName Show
         * @apiGroup Castings
         * @apiVersion 1.0.0
         * @apiUse MissingTokenError
         * @apiUse InvalidSchemeError
         * @apiUse InvalidTokenError
         * @apiUse TokenExpiredError
         * @apiUse CastingNotFoundError
         */
        .get('/:id',
            app.middlewares.ensureAuthenticated,
            app.actions.castings.show.expose()
        )

        /**
         * @api {post} /castings Register a new casting
         * @apiDescription Register a new casting into a project, **warning!** telltales are under limitation control, each duration has to be higher or equal to 1 hour (in ms).
         * @apiName Create
         * @apiParam {String} title          Mandatory title
         * @apiParam {Date} date             Mandatory date
         * @apiParam {String} project        Mandatory project reference
         * @apiParam {String} concrete       Mandatory concrete reference
         * @apiParam {Array} telltales       Optional collection of {duration: Number}
         * @apiGroup Castings
         * @apiVersion 1.0.0
         * @apiUse MissingTokenError
         * @apiUse InvalidSchemeError
         * @apiUse InvalidTokenError
         * @apiUse TokenExpiredError
         */
        .post('/',
            app.middlewares.ensureAuthenticated,
            app.middlewares.bodyParser.json(),
            app.middlewares.ensureBodyFields(['date', 'title', 'concrete', 'project']),
            app.actions.castings.create.expose()
        )

        /**
         * @api {put} /castings/:id Update specific casting
         * @apiName Update
         * @apiGroup Castings
         * @apiParam {String} name          Optional name
         * @apiParam {String} reference     Optional reference
         * @apiVersion 1.0.0
         * @apiUse MissingTokenError
         * @apiUse InvalidSchemeError
         * @apiUse InvalidTokenError
         * @apiUse TokenExpiredError
         * @apiUse CastingNotFoundError
         */
        .put('/:id',
            app.middlewares.ensureAuthenticated,
            app.middlewares.bodyParser.json(),
            app.middlewares.clean('_id'),
            app.actions.castings.update.expose()
        );

    app.server.use(`${app.settings.basePath}/v${app.settings.version}/castings`, router);
};

