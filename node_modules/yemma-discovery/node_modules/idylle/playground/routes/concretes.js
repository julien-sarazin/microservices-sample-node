module.exports = app => {
    const router = app.Router();

    /**
     * @api {get} /concretes/search Search a collection of concretes matching the search
     * @apiName Search
     * @apiGroup Concretes
     * @apiVersion 1.0.0
     * @apiUse MissingTokenError
     * @apiUse InvalidSchemeError
     * @apiUse InvalidTokenError
     * @apiUse TokenExpiredError
     */
    router
        .get('/search',
            app.middlewares.ensureAuthenticated,
            app.actions.concretes.search.expose()
        )

        /**
     * @api {get} /concretes    Request list of concretes
     * @apiName List
     * @apiGroup Concretes
     * @apiVersion 1.0.0
     * @apiUse MissingTokenError
     * @apiUse InvalidSchemeError
     * @apiUse InvalidTokenError
     * @apiUse TokenExpiredError
     */
        .get('/',
            app.middlewares.ensureAuthenticated,
            app.actions.concretes.list.expose()
        )
            
        /**
         * @api {get} /concretes/:id    Request detailed information about a specific user
         * @apiName Show
         * @apiGroup Concretes
         * @apiVersion 1.0.0
         * @apiUse MissingTokenError
         * @apiUse InvalidSchemeError
         * @apiUse InvalidTokenError
         * @apiUse TokenExpiredError
         * @apiUse ConcreteNotFoundError
         */
        .get('/:id',
            app.middlewares.ensureAuthenticated,
            app.actions.concretes.show.expose()
        )

        /**
         * @api {post} /concretes Register a new concrete
         * @apiDescription Register a new concrete into a work project
         * @apiName Create
         * @apiParam {String} name          Mandatory name
         * @apiParam {String} reference     Mandatory formula reference
         * @apiGroup Concretes
         * @apiVersion 1.0.0
         * @apiUse MissingTokenError
         * @apiUse InvalidSchemeError
         * @apiUse InvalidTokenError
         * @apiUse TokenExpiredError
         */
        .post('/',
            app.middlewares.ensureAuthenticated,
            app.middlewares.bodyParser.json(),
            app.middlewares.ensureBodyFields(['name', 'reference']),
            app.actions.concretes.create.expose()
        )

        /**
         * @api {put} /concretes/:id Update specific concrete
         * @apiName Update
         * @apiGroup Concretes
         * @apiParam {String} name          Optional name
         * @apiParam {String} reference     Optional reference
         * @apiVersion 1.0.0
         * @apiUse MissingTokenError
         * @apiUse InvalidSchemeError
         * @apiUse InvalidTokenError
         * @apiUse TokenExpiredError
         * @apiUse ConcreteNotFoundError
         */
        .put('/:id',
            app.middlewares.ensureAuthenticated,
            app.middlewares.bodyParser.json(),
            app.middlewares.clean('_id'),
            app.actions.concretes.update.expose()
        );

    app.server.use(`${app.settings.basePath}/v${app.settings.version}/concretes`, router);
};

